#!/usr/bin/python3

import sys
import docker

print("Start of " + sys.argv[0])

expectedNumOfArgs=3
if len(sys.argv) != (expectedNumOfArgs + 1):
  #need to subtract one as 0 argument is the file name
  print("Wrong number of arguments expected " + str(expectedNumOfArgs) + " - got " + str(len(sys.argv)-1))
  print("Recieved args:")
  print(sys.argv)
  print("Expecting:")
  print("Arg 1: WS_NAME (Used to derive service name - saas_user_management_system)")
  print("Arg 2: VERSION  (Must be 3 . seperated numbers - 0.0.1)")
  print("Arg 3: IMAGE_PREFIX (e.g. dockerhub user - metcarob/)")
  print("-")
  exit(1)

print("Given a service name and version stops all services and removes all images that don't match that version")

ws_name = sys.argv[1]
version = sys.argv[2]
image_prefix = sys.argv[3]

print("ws_name:" + ws_name)
print("version:" + version)
print("image_prefix:" + image_prefix)

version_underscore = version.replace('.','_')

service_name = ws_name + "_" + version_underscore

client = docker.DockerClient(base_url='unix://var/run/docker.sock')

#Check the service is running at desired version and error if it is not



foundService = False

running_services_for_this_ws = []
service_id_lookup = {}

for service in client.services.list():
  if service.name.startswith(ws_name):
    if service.name == service_name:
      foundService = True
    else:
      running_services_for_this_ws.append(service.name)
      service_id_lookup[service.name] = service.id

if foundService == False:
  print("Error - could not find live service")
  print("        (" + service_name + ")")
  exit(1)

print("Check live service is running PASSED (" + service_name + ")")

#Sort services so they are removed in alphabetical order
running_services_for_this_ws.sort()

for service_name in running_services_for_this_ws:
  print("Removing old service " + service_name)
  service = client.services.get(service_id=service_id_lookup[service_name])
  service.remove()


#print("Listing images:")
#for image in client.images.list():
#  print(image.id + "\t" + str(image.tags))

print("End of " + sys.argv[0])
exit(0)
